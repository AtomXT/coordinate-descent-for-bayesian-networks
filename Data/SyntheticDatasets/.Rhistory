# Data generation
# Want to show that CD can get optimal solution
# graphs with 10 nodes.
# 1. generate graph
# number of arcs: 10, 20, 30
# 2. generate data
# for each graph, generate samples with size: 50, 100, 200, 300, 400, 500,...
##############
### 02/23/2024
### Author: Tong Xu
##############
library(pcalg)
library(igraph)
library(MASS)
library(gRbase)
library(glue)
data.path = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/SyntheticDatasets"
setwd(data.path)
# ## generate DAG
# m <- 10 # graph with 10 nodes
# probs <- c(0.2, 0.3, 0.5)
# set.seed(m)
# for (i in 1:length(probs)) {
#   g = igraph.from.graphNEL(pcalg::randomDAG(m, probs[i])) # generated DAG
#   moral_g = moralize(g) # moral graph
#   edge.list = apply(get.edgelist(g), c(1, 2), as.numeric)
#   moral.edge.list = apply(get.edgelist(moral_g), c(1, 2), as.numeric)
#   file.name = glue("DAG.txt")
#   moral.file.name = glue("Moral_{file.name}")
#   write.table(edge.list, glue("{data.path}/graph{i}/{file.name}"), row.names=FALSE, col.names=FALSE, sep=',')
#   write.table(moral.edge.list, glue("{data.path}/graph{i}/{moral.file.name}"), row.names=FALSE, col.names=FALSE, sep=',')
# }
# ##
### generate samples for each dataset
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- c(5000) # different sample size
ndata <- 10 # number of iterations
for (g in 1:3){ # each graph
for (nsample in nsamples) {
## read the edge list
elist <- read.csv(glue("{data.path}/graph{g}/DAG.txt"), header = F)
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(g)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(g)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsample, mu=rep(0,nv), Sigma=covmat)
datfilename <- glue("{data.path}/graph{g}/data_n_{nsample}_iter_{jj}.csv")
write.table(datmat, datfilename, sep = ",",
row.names=FALSE, col.names=FALSE)
}
}
}
