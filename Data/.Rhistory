nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsamples, mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples, "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
write.table(datmat, datfilename, sep = ",",
row.names=FALSE, col.names=FALSE)
}
}
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "18link"  ## change this!
data.path = glue("{folder}{data_name}/link.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "17pigs"  ## change this!
data.path = glue("{folder}{data_name}/pigs.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "16diabetes"  ## change this!
data.path = glue("{folder}{data_name}/diabetes.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "15andes"  ## change this!
data.path = glue("{folder}{data_name}/andes.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "14munin"  ## change this!
data.path = glue("{folder}{data_name}/munin1.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "13pathfinder"  ## change this!
data.path = glue("{folder}{data_name}/pathfinder.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
##############
### 03/23/2024
### Generate 10 datasets for each real world network from 13pathfinder to 18link
### n = 5p
##############
library(igraph)
library(MASS)
library(glue)
data.path = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data"
setwd(data.path)
filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
number.nodes <- c(109, 186, 223, 413, 441, 724)
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- number.nodes*5
ndata <- 10
#ii=3
for(ii in 1:length(filenames)){
fname = filenames[ii]
## read the edge list
filename <- list.files(glue("{data.path}/RealWorldDatasets/{fname}"), "Sparse_Original")
elist <- read.csv(glue("{data.path}/RealWorldDatasets/{fname}/{filename}"))
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsamples, mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples, "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
write.table(datmat, datfilename, sep = ",",
row.names=FALSE, col.names=FALSE)
}
}
##############
### 08/27/2023
### Generate 10 datasets for each real world network from 1dsep to 12hepar
### Most part of this script is copied from "datfromgraph_unequalvar.R"
##############
library(igraph)
library(MASS)
data.path = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data"
setwd(data.path)
filenames <- list.files(glue("{data.path}/RealWorldDatasets"))
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- 1000
ndata <- 10
#ii=3
for(ii in 1:length(filenames)){
fname = filenames[ii]
## read the edge list
filename <- list.files(glue("{data.path}/RealWorldDatasets/{fname}"), "Sparse_Original")
elist <- read.csv(glue("{data.path}/RealWorldDatasets/{fname}/{filename}"))
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsamples, mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples, "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
# write.table(datmat, datfilename, sep = ",",
#             row.names=FALSE, col.names=FALSE)
}
}
filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
number.nodes <- c(109, 186, 223, 413, 441, 724)
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- number.nodes*5
ndata <- 10
nsamples[1]
##############
### 03/23/2024
### Generate 10 datasets for each real world network from 13pathfinder to 18link
### n = 5p
##############
library(igraph)
library(MASS)
library(glue)
data.path = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data"
setwd(data.path)
filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
number.nodes <- c(109, 186, 223, 413, 441, 724)
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- number.nodes*5
ndata <- 10
#ii=3
for(ii in 1:length(filenames)){
fname = filenames[ii]
## read the edge list
filename <- list.files(glue("{data.path}/RealWorldDatasets/{fname}"), "Sparse_Original")
elist <- read.csv(glue("{data.path}/RealWorldDatasets/{fname}/{filename}"))
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsamples[ii], mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples, "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
write.table(datmat, datfilename, sep = ",",
row.names=FALSE, col.names=FALSE)
}
}
filename <- list.files(glue("{data.path}/RealWorldDatasets/{fname}"), "Sparse_Original")
elist <- read.csv(glue("{data.path}/RealWorldDatasets/{fname}/{filename}"))
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
set.seed(jj)
datmat <- mvrnorm(n=nsamples[ii], mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples, "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
datfilename
datfilename <- paste0(
paste("data", fname, "n", nsamples[ii], "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
datfilename
##############
### 03/23/2024
### Generate 10 datasets for each real world network from 13pathfinder to 18link
### n = 5p
##############
library(igraph)
library(MASS)
library(glue)
data.path = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data"
setwd(data.path)
filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
number.nodes <- c(109, 186, 223, 413, 441, 724)
eweights <- c(-0.8, -0.6, 0.6, 0.8)
sigvec <- c(0.5, 1, 1.5)
nsamples <- number.nodes*5
ndata <- 10
#ii=3
for(ii in 1:length(filenames)){
fname = filenames[ii]
## read the edge list
filename <- list.files(glue("{data.path}/RealWorldDatasets/{fname}"), "Sparse_Original")
elist <- read.csv(glue("{data.path}/RealWorldDatasets/{fname}/{filename}"))
## create a graph object and get adjacency matrix
gg <- graph_from_edgelist(as.matrix(elist))
adjmat <- t(as.matrix(get.adjacency(gg)))
nv <- ncol(adjmat)
## add weights to the adjacency matrix and obtain influence matrix
set.seed(ii)
adjmat_wgtd <- adjmat *
matrix(sample(eweights, nv*nv, replace=T), nv, nv)
Ip <- diag(1, nv, nv)
infmat <- solve(Ip - adjmat_wgtd)
## covariance matrix for random noise with non-equal variance
## using formulas in Shojaie & Michailidis (2010)
set.seed(ii)
covmat <- diag(sample(sigvec, nv, replace=T))
covmat <- infmat %*% covmat %*% t(infmat)
## generate data and write it into the same folder
for(jj in 1:ndata){
set.seed(jj)
datmat <- mvrnorm(n=nsamples[ii], mu=rep(0,nv), Sigma=covmat)
datfilename <- paste0(
paste("data", fname, "n", nsamples[ii], "iter", jj, sep="_"), ".csv")
datfilename <- glue("{data.path}/RealWorldDatasets/{fname}/{datfilename}")
write.table(datmat, datfilename, sep = ",",
row.names=FALSE, col.names=FALSE)
}
}
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "13pathfinder"  ## change this!
data.path = glue("{folder}{data_name}/pathfinder.bif.gz") ## and this file name
data = read.bif(data.path)
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
adjlist
upper.tri(adjlist)
upper.tri(adjlist) = 0
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
data_name = "13pathfinder"  ## change this!
data.path = glue("{folder}{data_name}/pathfinder.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
# filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
data_name = "14munin"  ## change this!
data.path = glue("{folder}{data_name}/munin1.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
# filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
data_name = "15andes"  ## change this!
data.path = glue("{folder}{data_name}/andes.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
# filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
data_name = "16diabetes"  ## change this!
data.path = glue("{folder}{data_name}/diabetes.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
# filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
data_name = "17pigs"  ## change this!
data.path = glue("{folder}{data_name}/pigs.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
# generate the edge list from .bif file on website: https://www.bnlearn.com/bnrepository/discrete-verylarge.html#andes
library(glue)
folder = "/Users/tongxu/Downloads/projects/MICODAG-CD/Data/RealWorldDatasets/"
# filenames <- c('13pathfinder', '14munin', '15andes', '16diabetes', '17pigs', '18link')
data_name = "18link"  ## change this!
data.path = glue("{folder}{data_name}/link.bif.gz") ## and this file name
data = read.bif(data.path)
graph1 = as.igraph(data)
adjlist = as_adj(graph1)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Original_edges.txt"), row.names=F, col.names=F, sep=',')
# moralize
moral1 = moral(data)
graph2 = as.igraph(moral1)
adjlist = as_adj(graph2)
rownames(adjlist) = NULL
colnames(adjlist) = NULL
adjlist[lower.tri(adjlist)] = 0
edge_list <- as_edgelist(graph.adjacency(adjlist))
write.table(edge_list, glue("{folder}{data_name}/Sparse_Moral_edges.txt"), row.names=F, col.names=F, sep=',')
install.packages("sparsebn")
